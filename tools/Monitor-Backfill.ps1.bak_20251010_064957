param(
  [string]$RootPath = "C:\AI\tw-alpha-stack",
  [int]$IntervalSec = 30
)
$ErrorActionPreference = "SilentlyContinue"
$PY = Join-Path $RootPath ".venv\Scripts\python.exe"
Write-Host "=== Monitor started $(Get-Date) ==="
while ($true) {
  try {
    $L = Get-ChildItem "$RootPath\logs\backfill_all_*.log" -ErrorAction SilentlyContinue |
         Sort-Object LastWriteTime | Select-Object -Last 1
    if ($L) {
      Write-Host "`n--- Tail: $($L.Name) ---"
      Get-Content $L.FullName -Tail 15
    }
    $raw = (Get-ChildItem "$RootPath\datahub\raw\finmind" -Recurse -Filter *.parquet -ErrorAction SilentlyContinue).Count
    $sil = (Get-ChildItem "$RootPath\datahub\silver\alpha" -Recurse -Filter *.parquet -ErrorAction SilentlyContinue).Count
    "{0:HH:mm:ss}  RAW={1}  SILVER={2}" -f (Get-Date), $raw, $sil | Write-Host
    & $PY "$RootPath\scripts\preflight_check.py" --rules "$RootPath\rules.yaml" --export "$RootPath\reports" --root "$RootPath" | Out-Null
    $pf = Get-Content "$RootPath\reports\preflight_report.json" -Raw | ConvertFrom-Json
    $sum = $pf.freshness | ? { $_.dataset -like '*\prices' -or $_.dataset -like '*\chip' -or $_.dataset -like '*\per' -or $_.dataset -like '*\dividend' } |
           Select-Object dataset,max_date
    $sum | Format-Table -AutoSize
  } catch {
    Write-Warning $_.Exception.Message
  }
  Start-Sleep -Seconds $IntervalSec
}
