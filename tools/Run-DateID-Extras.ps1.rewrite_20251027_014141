#requires -Version 7
<#
  Run-DateID-Extras.ps1
  單日×多股 Date-ID 特攻（預設「必收 8 表」），把資料寫到 datahub\silver\alpha\extra\<Dataset>\yyyymm=*。
  --end 為不含終點；單日預設以 (Date + 1) 傳給 Python 外掛。 
#>
[CmdletBinding(PositionalBinding=$false)]
param(
  [Parameter(Mandatory)][datetime]$Date,
  [Parameter(Mandatory)][string[]]$IDs,
  [string]$Datasets = 'TaiwanStockShareholding,TaiwanStockKBar,TaiwanStockMarketValue,TaiwanStockMarketValueWeight,TaiwanStockSplitPrice,TaiwanStockParValueChange,TaiwanStockCapitalReductionReferencePrice,TaiwanStockDelisting',
  [ValidateRange(6,120)][int]$RPM = 10,
  [ValidateRange(1,2000)][int]$Batch = 300,
  [string]$DataRoot = 'datahub',
  [datetime]$End
)

Set-StrictMode -Version Latest
$ErrorActionPreference='Stop'

# 專案根與 Python
$root = (Resolve-Path -LiteralPath (Join-Path $PSScriptRoot '..')).Path
Set-Location $root
if(-not $env:ALPHACITY_ALLOW){ $env:ALPHACITY_ALLOW='1' }
Remove-Item Env:PYTHONSTARTUP -ErrorAction SilentlyContinue | Out-Null
$PY = '.\.venv\Scripts\python.exe'
if(-not (Test-Path $PY)){ throw "找不到 $PY，請先建立 venv 並安裝需求套件。" }
if([string]::IsNullOrWhiteSpace($env:FINMIND_TOKEN)){ throw "FINMIND_TOKEN 未設定" }
if(-not $env:FINMIND_KBAR_INTERVAL){ $env:FINMIND_KBAR_INTERVAL='5' }

# ===== 共用：池表與樣板展開（ALL/23XXX/23*） =====
function Get-PoolIDs {
  $candidates = @(
    '.\configs\investable_universe.txt',
    '.\configs\universe.tw_all.txt', '.\configs\universe.tw_all',
    '.\configs\groups\ALL', '.\configs\groups\ALL.txt',
    '.\universe\universe.tw_all.txt', '.\universe\tw_all.txt', '.\universe\all.txt'
  )
  foreach($p in $candidates){
    if(Test-Path $p){
      $ids = Get-Content -LiteralPath $p | ForEach-Object {
        if($_ -match '^\s*(\d{4})(?:\.TW)?\b'){ $matches[1] }
      } | Sort-Object -Unique
      if($ids.Count -gt 0){ return $ids }
    }
  }
  throw "找不到有效池表或內容為空；候選：" + ($candidates -join ', ')
}
function Convert-TokenToLike4([string]$token){
  $t = ($token -replace '\.TW$','').Trim()
  if($t -match '^(ALL|TSE)$'){ return '????' }
  $like=''
  foreach($ch in $t.ToCharArray()){
    if($like.Length -ge 4){ break }
    switch -Regex ($ch){
      '^\d$'     { $like += $ch; break }
      '^[Xx\?]$' { $like += '?'; break }
      '^\*$'     { while($like.Length -lt 4){ $like += '?' }; break }
      default    { break }
    }
  }
  while($like.Length -lt 4){ $like += '?' }
  return $like
}
function Expand-IDPatterns([string[]]$IDs){
  $pool = Get-PoolIDs
  $set  = New-Object System.Collections.Generic.HashSet[string]
  foreach($tok in @($IDs)){
    foreach($raw in ( ($tok -is [string] -and $tok -match ',') ? $tok.Split(',') : @($tok) )){
      $t = ($raw -replace '\.TW$','').Trim()
      if(-not $t){ continue }
      if($t -match '^(ALL|TSE)$'){ foreach($id in $pool){ [void]$set.Add($id) }; continue }
      if($t -match '^[0-9]{4}$'){ [void]$set.Add($t); continue }
      $like = Convert-TokenToLike4 $t
      foreach($id in $pool){ if($id -like $like){ [void]$set.Add($id) } }
    }
  }
  return @($set | Sort-Object)
}

# IDs 樣板展開 → .TW
$expandedIDs = @(Expand-IDPatterns @($IDs))
if(-not $expandedIDs){ throw "IDs 展開後為空（請檢查樣板或池表）" }
$symbols = foreach($id in $expandedIDs){ "$id.TW" }
$symbols = @($symbols)

# 窗口（--end 不含 → Date+1），與 datasets 清單
$ds    = $Date.ToString('yyyy-MM-dd')
$endEx = if($PSBoundParameters.ContainsKey('End')){ ([datetime]$End).ToString('yyyy-MM-dd') } else { ($Date.AddDays(1)).ToString('yyyy-MM-dd') }
$sets  = ($Datasets -split ',') | ForEach-Object { $_.Trim() } | Where-Object { $_ }

# 節流（RPM 傳給 Python 外掛實作 sleep）
$env:FINMIND_THROTTLE_RPM = [string]$RPM

Write-Host "[DateID-Extras] date=$ds end_exclusive=$endEx ids=$(@($symbols).Count) rpm=$RPM datasets=$($sets -join ',')"

for($i=0; $i -lt @($symbols).Count; $i+=$Batch){
  $j=[Math]::Min($i+$Batch-1,@($symbols).Count-1)
  $chunk=$symbols[$i..$j]; $idsArg=($chunk -join ',')
  foreach($d in $sets){
    & $PY .\scripts\fm_dateid_fetch.py `
      --datasets $d --ids $idsArg `
      --date $ds --end $endEx `
      --out-root $DataRoot
  }
  if($i -lt (@($symbols).Count-1)){ Start-Sleep -Milliseconds 500 }
}
Write-Host "Done (extras)."


