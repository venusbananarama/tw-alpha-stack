下面這份是**可直接貼進畫布的「統合紀錄」**。我把「目前現況要記的點」、「已知問題與修復口訣」、以及「統一語法（標準指令）與檔案/路徑口徑」整理成一張。需要填值的地方我用 ☐ / ⌧ 或 `<填入>` 標示；末段也給了**一鍵快照生成**腳本，方便每天覆寫。內容口徑完全對齊《代號4｜AlphaCity v4X 落地版》手冊。

---

# 代號4｜統合紀錄（Canvas 版）

## A. 現況快照（當日可直接填）

* **日期**：`<YYYY‑MM‑DD>`（時區 Asia/Taipei）
* **Python / pandas / pyarrow**：`<3.11.9 / x.y.z / x.y.z>`
* **DataHub Freshness**：prices=`<YYYY‑MM‑DD>` / chip=`<YYYY‑MM‑DD>` / dividend=`<YYYY‑MM‑DD>` / per=`<YYYY‑MM‑DD>`
* **投資池規模**：`<N 檔>`（configs/investable_universe.txt 行數）
* **最近 WF（6/12/24）**：通過率=`<xx%>`
* **Gate 狀態**：`PASS / FAIL`（若 FAIL，列主因）
* **里程碑**：D+7 / D+30 / D+60 / D+90：`<達成/進行中/未啟動>`
* **已知阻塞**：`• …`

> 本段欄位對齊「進度快照模板」與 Gate 報表口徑；每日覆寫即可。

---

## B. 已知問題清單（含修復口訣）

1. **KILLSWITCH 未解鎖 / 用了 `python -S`**
   　症狀：sitecustomize 不載入、找不到套件。
   　修復：`$env:ALPHACITY_ALLOW='1'`；**不要用** `-S`；清 `PYTHONSTARTUP`；使用專案 venv：`.venv\Scripts\python.exe`。

2. **FinMind 回填參數誤用**
   　症狀：少一天資料、路徑重複（…\silver\alpha\silver\alpha…）。
   　修復：記得 **--end 為不含終點，多 +1 天**；根目錄一律用 `--datahub-root datahub`。

3. **路徑/檔案樹不一致**
   　修復：根目錄 `C:\AI\tw-alpha-stack\`；DataHub 在 `datahub\silver\alpha\<domain>\yyyymm=YYYYMM\`；必要時把 DataHub 外置到 D: 但專案其餘仍在 C:。

4. **報表缺失或為空**
   　修復：先跑 `preflight_check.py` 修 freshness / as‑of / calendar；確認 `investable_universe.txt` 非空，再回測與 WF。

5. **NumPy/Numba/llvmlite 相容性**
   　修復：遵守協調版：`numpy 2.0.x / pandas 2.2.x / numba ≥0.60 / llvmlite ≥0.43`；用 **影子 venv** 冒煙後再切主 venv。

6. **CRLF/縮排與重複 reports 目錄**
   　修復：統一格式化與清理重複；工具腳本已容錯。

---

## C. 統一語法（標準指令｜PowerShell 7.x）

> 基本口訣：先解鎖→Preflight→回填（缺料才跑）→建池→回測/網格→WF→Gate→報表。以下指令可直接貼上執行。

### C1) 全域準備與驗證

```powershell
# 0) 專案根
Set-Location C:\AI\tw-alpha-stack

# 1) 解鎖 KILLSWITCH
$env:ALPHACITY_ALLOW = '1'
Remove-Item Env:PYTHONSTARTUP -ErrorAction SilentlyContinue
$PY = ".\.venv\Scripts\python.exe"

# 2) 版本冒煙
& $PY -V
& $PY -c "import pandas, pyarrow; print('OK pandas/pyarrow:', pandas.__version__, pyarrow.__version__)"
```

（環境/版本一致性按此驗收。）

### C2) Preflight（新鮮度／規則檢）

```powershell
& $PY .\scripts\preflight_check.py --rules .\rules.yaml --export .\reports --root .
Get-Content .\reports\preflight_report.json -TotalCount 80
```

（檢 schema、as‑of、freshness、calendar；FAIL 先修再進下一步。）

### C3) 資料回填（缺料時才執行）

```powershell
# --end 不含終點，請多 +1 天；--datahub-root 一律指到 datahub
& $PY .\scripts\finmind_backfill.py --datasets TaiwanStockPrice --symbols 2330,2317 `
  --start 2015-01-01 --end 2025-10-07 --datahub-root datahub
& $PY .\scripts\finmind_backfill.py --datasets TaiwanStockInstitutionalInvestorsBuySell --symbols 2330,2317 `
  --start 2015-01-01 --end 2025-10-07 --datahub-root datahub
```

（可選：dividend / PER 視供應商覆蓋度。）

### C4) 建投資池

```powershell
& $PY .\scripts\build_universe.py --config .\configs\universe.yaml --rules .\rules.yaml `
  --out .\configs\investable_universe.txt --drop-empty
'UNIVERSE lines=' + ((Get-Content .\configs\investable_universe.txt | Measure-Object -Line).Lines)
```

（條件口徑在 universe.yaml：流動性、排除清單等。）

### C5) 回測與參數網格（示例）

```powershell
# 單策略回測
& $PY .\scripts\backtest\longonly_topN.py --symbols-file .\configs\investable_universe.txt `
  --start 2018-01-01 --end 2025-10-03 --topN 20 --rebalance Weekly --cost-bps 10 --tax-bps 30
# （如需網格：於 runs/grid/ 放置對應 YAML，再執行 run_grid.py）
```

（報表含 NAV/DD/Sharpe、成交與成本明細。）

### C6) Walk‑forward 與 Gate

```powershell
& $PY .\scripts\wf_runner.py --dir .\runs\wf_configs --export .\reports
.\tools\Run-WFGate.ps1
Get-Content .\reports\gate_summary.json -TotalCount 120
```

（WF 三窗 6/12/24；Gate 條件見 D 節。）

---

## D. SSOT 與 Gate 最小條款（上線口徑）

* **Alpha 品質**：週 RankIC ≥ 0.03；PSR ≥ 0.9；t ≥ 2；DSR（含成本）> 0。
* **風險/交易**：MaxDD ≤ 20%；年化 Turnover ≤ 500%；單檔 ≤ 5%；日成交量佔比 ≤ 5%。
* **執行**：回放 MAE ≤ 2 bps；成本回放偏差 > 30% 立刻下線重估。
* **WF/Gate**：WF 三窗通過率 ≥ 0.80；Regime 三鍵（trend_up / vol_up / liq_up）皆非負。
* **Live 控制**：Kill‑switch −10%（降倉 50%）/ −15%（全停）；僅在 in‑sample MaxDD ≤ 15% 才可 1.2–1.3× 槓桿。

> 以上條款已 Rules‑as‑Code 化於 `rules.yaml`，門檻可機器檢查並綁 SSOT 哈希。

---

## E. 目錄與路徑標準（落地一致性）

```
C:\AI\tw-alpha-stack\
  configs\{universe.yaml, rules.yaml, investable_universe.txt, ...}
  datahub\silver\alpha\{prices,chip,dividend,per}\yyyymm=YYYYMM\
  reports\  metrics\  runs\wf_configs\  scripts\  tools\
```

> 大量資料時僅外置 **DataHub** 至 `D:\AI\datahub`（其餘仍在 C:）；或用符號連結把 `datahub -> D:\AI\datahub`。

---

## F. 每日一鍵快照（貼群組/郵件用）

```powershell
$PY = './.venv/Scripts/python.exe'
$pf = Get-Content ./reports/preflight_report.json -Raw | ConvertFrom-Json
$gs = Get-Content ./reports/gate_summary.json -Raw | ConvertFrom-Json -ErrorAction SilentlyContinue
$uni = (Get-Content ./configs/investable_universe.txt -ErrorAction SilentlyContinue | Measure-Object -Line).Lines
$pp  = & $PY -c "import pandas,pyarrow,platform;print(platform.python_version(),pandas.__version__,pyarrow.__version__)"
"[AlphaCity 快照] date=$(Get-Date -Format yyyy-MM-dd)
python/pandas/pyarrow= $pp
freshness: prices=$($pf.freshness.prices.max_date) chip=$($pf.freshness.chip.max_date) dividend=$($pf.freshness.dividend.max_date) per=$($pf.freshness.per.max_date)
universe_lines=$uni
wf_pass=$($gs.wf.pass_rate) gate=$($gs.overall)" | Set-Content ./reports/snapshot.txt
Get-Content ./reports/snapshot.txt
```

> 產出 `reports/snapshot.txt`，可直接貼到聊天或郵件。

---

## G. 排程與證據鏈（營運視角）

* **排程**：Windows 工作排程器 → `alphacity_nightly.bat`；內容＝ Preflight → 建池 → WF → Gate → 匯報。
* **可驗證證據**：`preflight_report.json`、`gate_summary.json`、`reports/*.html|xlsx`、`configs/investable_universe.txt`、`run_manifest.json`、`requirements-lock.txt`。

> 任一結論都能回溯到上述檔與哈希；缺任一視為未完成。

---

###（選配）FF v2 研發路標（若畫布需要研發欄）

* 家族：technical / fundamental / chip / macro / options / deep；`|corr| < 0.7` 後再合成；`turnover_y ≤ 500`；WF pass ≥ 0.80。
* 產物：`features/*.parquet`、`features/orthogonalized/*.parquet`、`features/composite/*.parquet`、`reports/factor_cards/*.json`。

> 與既有 Gate/Rules 一致，不動舊接口，只擴充。

---

如果你願意，我也可以把上面這張「統合紀錄」再**壓縮成更精簡的 1‑pager**（或者拆成「運維面/研發面」兩張）方便你分欄貼在畫布；告訴我你畫布的欄位結構（例如：現況、問題、指令、里程碑），我就依欄位輸出對應版本。




OneClick-Repair.ps1（可直接貼上存檔


# 查 429
$has429 = Select-String .\reports\*.log -Pattern '429|Too Many|Rate limit' -List -ErrorAction SilentlyContinue | Select -First 1
if($has429){ '偵測到 429：請先降檔或維持現狀' } else { '無 429：可升檔' }

# 升檔示例：10 → 20 → 30 → 50 → 80 → 100
$env:FINMIND_THROTTLE_RPM='10'
pwsh -NoProfile -File .\tools\Run-Max-Recent.ps1 `
  -Start 2018-01-15 -WindowDays 14 -Workers 4 -ThrottleRPM 20 `
  -Tag S1_all -Group ALL
